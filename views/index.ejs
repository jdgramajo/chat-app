<!DOCTYPE html>
<html lang="en" class="h-100">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta name="author" content="JD" />
    <title>Chat App</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"
    />
  </head>

  <body class="d-flex flex-column h-100">
    <!-- Modal -->
    <div
      class="modal fade"
      id="changeUserNameModal"
      tabindex="-1"
      aria-labelledby="changeUserNameModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="changeUserNameModalLabel">
              Change user name
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="new-user-name-form" action="">
              <div>
                <label for="new-user-name-input" class="form-label"
                  >New name:</label
                >
                <input
                  id="new-user-name-input"
                  class="form-control"
                  autocomplete="off"
                />
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button
              type="button"
              class="btn btn-outline-success"
              onclick="submitNewUserNameIfValid();"
            >
              Save changes
            </button>
          </div>
        </div>
      </div>
    </div>

    <header class="p-2 bg-light">
      <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center">
          <ul class="nav col-12 justify-content-center">
            <li
              style="cursor: pointer"
              title="Change username."
              onclick="showChangeUserNameModal();"
            >
              <i class="bi bi-person-circle px-2"></i>
            </li>
            <li
              id="user-name-label"
              style="cursor: pointer"
              title="Change username."
              onclick="showChangeUserNameModal();"
            ></li>
          </ul>
        </div>
      </div>
    </header>

    <main class="flex-shrink-0">
      <ul id="messages" class="list-group"></ul>
    </main>

    <footer class="footer mt-auto py-3 bg-light">
      <div class="container">
        <form id="new-message-form" action="">
          <div class="input-group">
            <input
              id="new-message-input"
              class="form-control"
              autocomplete="off"
            />
            <button type="submit" class="btn btn-secondary">Send</button>
          </div>
        </form>
      </div>
    </footer>

    <script src="/socket.io/socket.io.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>

    <script>
      const socket = io();

      const messages = document.getElementById("messages");
      const newMessageForm = document.getElementById("new-message-form");
      const newMessageInput = document.getElementById("new-message-input");
      const userNameLabel = document.getElementById("user-name-label");
      const changeUserNameModal = new bootstrap.Modal(
        document.getElementById("changeUserNameModal")
      );
      const newUserNameForm = document.getElementById("new-user-name-form");
      const newUserNameInput = document.getElementById("new-user-name-input");

      let userName = "";

      const addMessage = ({ userName, message }) => {
        let item = document.createElement("li");
        let itemClassValue = "list-group-item border-0";
        itemClassValue +=
          messages.childElementCount % 2 != 0
            ? " list-group-item-secondary"
            : "";
        item.setAttribute("class", itemClassValue);
        item.innerHTML = `<b>${userName}:</b> ${message}`;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      };

      newMessageForm.addEventListener("submit", (e) => {
        e.preventDefault();
        if (newMessageInput.value) {
          addMessage({ userName: "Me", message: newMessageInput.value });
          socket.emit("chatMessageEmitted", {
            userName,
            message: newMessageInput.value,
          });
          newMessageInput.value = "";
        }
      });

      // New user name handling.

      const showChangeUserNameModal = () => {
        changeUserNameModal.show();
      };

      const submitNewUserNameIfValid = () => {
        if (newUserNameInput.value == "") return;
        socket.emit("setUserName", newUserNameInput.value);
        newUserNameInput.value = "";
        changeUserNameModal.hide();
      };

      // Pressing enter from the input is equivalent to a submit.
      newUserNameForm.addEventListener("submit", (e) => {
        e.preventDefault();
        submitNewUserNameIfValid();
      });

      // socket events

      socket.on("chatMessageEmitted", ({ userName, message }) => {
        addMessage({ userName, message });
      });

      socket.on("setUserName", (newName) => {
        userName = newName;
        userNameLabel.innerText = newName;
      });

      socket.on("clearMessages", () => {
        messages.innerHTML = "";
      });
    </script>
  </body>
</html>
